# frozen_string_literal: true

require 'csv'

def disable_pry
  ENV.present? && ENV['DISABLE_PRY'] = true
end

def enable_pry
  ENV.present? && ENV['DISABLE_PRY'] = nil
end

# rubocop:disable Style/GlobalVars
def disable_logs
  $old_logger ||= ActiveRecord::Base.logger
  ActiveRecord::Base.logger = nil
end

def enable_logs
  ActiveRecord::Base.logger = $old_logger
end
# rubocop:enable Style/GlobalVars

def with_disabled_logs
  disable_logs
  value = block_given? ? yield : nil
  enable_logs

  value
end

# rubocop:disable Style/RescueStandardError
# rubocop:disable Lint/Debugger
def rescue_with_debugger(&block)
  block.call
rescue => e
  binding.pry
  raise
end
# rubocop:enable Style/RescueStandardError
# rubocop:enable Lint/Debugger

def pbcopy(input)
  input = input.to_s

  IO.popen('pbcopy', 'w') do |pipe|
    pipe << input
  end

  input
end

def pbpaste
  `pbpaste`
end

# rubocop:disable Style/GlobalVars
def with_duration
  $result = nil
  return nil unless block_given?

  start_time = Time.now.to_i
  $result = yield
  end_time = Time.now.to_i

  duration = end_time - start_time
  puts "Lasted #{duration} seconds."
end

def with_duration_last_result
  return $result unless $result.nil?

  raise 'with_duration not yet called in this pry session'
end
# rubocop:enable Style/GlobalVars

# vim:ft=ruby

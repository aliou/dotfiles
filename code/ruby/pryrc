# frozen_string_literal: true

require 'csv'

def disable_pry
  ENV.present? && ENV['DISABLE_PRY'] = true
end

def enable_pry
  ENV.present? && ENV['DISABLE_PRY'] = nil
end

# rubocop:disable Style/GlobalVars
def disable_logs
  $old_logger ||= ActiveRecord::Base.logger
  ActiveRecord::Base.logger = nil
end

def enable_logs
  ActiveRecord::Base.logger = $old_logger
end
# rubocop:enable Style/GlobalVars

def with_disable_logs
  disable_logs
  value = block_given? ? yield : nil
  enable_logs

  value
end

# rubocop:disable Style/Alias
alias_method :with_disabled_logs, :with_disable_logs
alias_method :without_logs, :with_disable_logs
# rubocop:enable Style/Alias

# rubocop:disable Style/RescueStandardError
# rubocop:disable Lint/Debugger
def rescue_with_debugger(&block)
  block.call
rescue => e
  binding.pry
  raise
end
# rubocop:enable Style/RescueStandardError
# rubocop:enable Lint/Debugger

def pbcopy(input)
  input = input.to_s

  IO.popen('pbcopy', 'w') do |pipe|
    pipe << input
  end

  input
end

def pbpaste
  `pbpaste`
end

# vim:ft=ruby
